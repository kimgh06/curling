#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<windows.h>
#include<string.h>
#include<conio.h>
char board[50][60] = {
	" --------------------------------------------------------- ",
	"|                                                         |",
	"|                                                         |",
	"|              -----------------------------              |",
	"|             |                             |             |",
	"|             |    ---------------------    |             |",
	"|             |   |                     |   |             |",
	"|             |   |    -------------    |   |             |",
	"|             |   |   |             |   |   |             |",
	"|             |   |   |    -----    |   |   |             |",
	"|             |   |   |   |     |   |   |   |             |",
	"|             |   |   |   |     |   |   |   |             |",
	"|             |   |   |    -----    |   |   |             |",
	"|             |   |   |             |   |   |             |",
	"|             |   |    -------------    |   |             |",
	"|             |   |                     |   |             |",
	"|             |    ---------------------    |             |",
	"|             |                             |             |",
	"|              -----------------------------              |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                         |",
	"|                                                    ---  |",
	"|                                                   | 1 | |",
	"|                                                   | 2 | |",
	"|                                                   | 3 | |",
	"|                                                   | 4 | |",
	"|                                                   | 5 | |",
	"|                                                   | 4 | |",
	"|                                                   | 3 | |",
	"|                                                   | 2 | |",
	"|                                                   | 1 | |",
	"|                                                    ---  |",
	"|---------------------------------------------------------|",
	"|   p1 :    |                                     |남은 공|",
	"|           |                                     |       |",
	"|   p2 :    |                                     |       |",
	" ---------------------------------------------------------"
};
char title[50][60];
char ball[3] = {"|@|"};
int on = 0, locat = 5, up = 0, dtc = 0, speed = 0, twink = 250, player = 0, used = 0;
int b1 = 5, b2 = 5;
void point() {
	if (used == 0) {
		if (player == 0) { //1의 점수 계산

		}
		else if (player == 1) { //2의 점수 계산

		}
		used = 1; //점수 계산 했음을 표시
	}
}
void push() {
	if (_kbhit()) {
		char a = _getch();
		if (a == ' ') {//입력
			if (on == 1) {//갈 거리 증가				
				dtc++;
			}
			else if (on == 0) {//속도 초기화
				if (locat > 5)
					dtc += 2 * (10 - locat);
				else
					dtc += locat * 2;
				on = 1;
			}
		}
	}
}
void sweep() {
	if (dtc == 0) { //종료
		on = 0;
		printf("정지 됨");
		twink = 2000;
		locat = 5;
		point(); //점수 계산
	}
	else {
		if (dtc > 1) {
			switch (dtc / 2) {
			case 1:
				dtc -= 2;
				speed += 2;
				break;
			case 2:
			case 3:
				dtc -= 4;
				speed += 4;
				break;
			case 4:
			case 5:
				dtc -= 5;
				speed += 5;
				break;
			}
		}
		else if (dtc > 0) {
			dtc--;
			speed++;
		}
		printf("dtc : %d", dtc);//이동 확인
	}
}
void updown() {
	if (on == 0) {
		if (locat == 1) { //방향 설정
			up = 0;
		}
		else if (locat == 9) {
			up = 1;
		}
		if (up == 0) {
			locat++;
		}
		else if (up == 1) {
			locat--;
		}
	}
	title[34 + locat][50] = '>';
}
void copy() {
	for (int i = 0; i < 50; i++) {
		strcpy(title[i], board[i]); // 배경복사
	}
	updown(); //위 아래로 움직이는 화살표
	push();
	if (46 - speed < 0) { //벽에 닿았을 경우 후진후 종료
		dtc = 0;
		speed = 45;
		on = 0;
		twink = 2000;
	}
	title[46 - speed][28] = ball[0]; 
	title[46 - speed][29] = ball[1]; 
	title[46 - speed][30] = ball[2];
}
void print() {
	for (int i = 0; i < 50; i++) {
		printf("\t\t\t\t\t\t");
		printf("%s", title[i]);
		if (i != 49)
			printf("\n");
	}
}
void gamestart() {
	while (1) {
		if (on == 0){
			speed = 0; //거리 초기화
		}
		else if (on == 1) {
			used = 0; //점수 계산 초기화
			sweep();
		}
		copy();
		print();
		Sleep(twink); //화면 초기화
		system("cls");
		twink = 250;
	}
}
int main() {
	gamestart();
}
